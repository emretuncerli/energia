#define basla	GPIO_PIN_0
#define dur	GPIO_PIN_1
#define yavasla	GPIO_PIN_2
#define hizlan	GPIO_PIN_3
#define ileri	GPIO_PIN_4
#define geri	GPIO_PIN_5
#define yon	GPIO_PIN_6
#define darbe	GPIO_PIN_7

SysCtlClockSet(SYSCTL_SYSDIV_2_5|SYSCTL_USE_PLL|SYSCTL_XTAL_16MHZ|SYSCTL_OSC_MAIN);
	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);
GPIOPinTypeGPIOInput(GPIO_PORTB_BASE, basla);
GPIOPinTypeGPIOInput(GPIO_PORTB_BASE, dur);
GPIOPinTypeGPIOInput(GPIO_PORTB_BASE, hizlan);
GPIOPinTypeGPIOInput(GPIO_PORTB_BASE, yavasla);
GPIOPinTypeGPIOInput(GPIO_PORTB_BASE, ileri);
GPIOPinTypeGPIOInput(GPIO_PORTB_BASE, geri);
GPIOPinTypeGPIOOutput(GPIO_PORTB_BASE, darbe);
GPIOPinTypeGPIOOutput(GPIO_PORTB_BASE, yon);

GPIOPadConfigSet(GPIO_PORTB_BASE, basla|dur|hizlan|yavasla|ileri|geri, GPIO_STRENGTH_2MA, GPIO_PIN_TYPE_STD_WPU);
 GPIOIntTypeSet(GPIO_PORTB_BASE, basla|dur|hizlan|yavasla|ileri|geri,  GPIO_FALLING_EDGE);
 GPIOPinIntEnable(GPIO_PORTB_BASE, basla|dur|hizlan|yavasla|ileri|geri, );
IntEnable(INT_GPIOB);
 IntMasterEnable();
 SysCtlPeripheralEnable(SYSCTL_PERIPH_UART0);
    GPIOPinConfigure(GPIO_PA0_U0RX);
		GPIOPinConfigure(GPIO_PA1_U0TX);
    GPIOPinTypeUART(GPIO_PORTA_BASE, GPIO_PIN_0 | GPIO_PIN_1);
		UARTConfigSetExpClk(UART0_BASE, SysCtlClockGet(), 115200,(UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE));  
    IntEnable(INT_UART0);
    UARTIntEnable(UART0_BASE, UART_INT_RX | UART_INT_RT);
    UARTStdioInit(0);
TimerConfigure(TIMER0_BASE, TIMER_CFG_32_BIT_PER);
TimerIntEnable(TIMER0_BASE, TIMER_TIMA_TIMEOUT);
TimerLoadSet(TIMER0_BASE, TIMER_A, SysCtlClockGet()/20);
TimerIntEnable(TIMER0_BASE, TIMER_TIMA_TIMEOUT);
IntEnable(INT_TIMER0A);
void Timer0IntHandler(void)
{
TimerIntClear(TIMER0_BASE, TIMER_TIMA_TIMEOUT);
if(K==0){
GPIOPinWrite(GPIO_PORTB_BASE,darbe, 0);
K=1;
}
Else{
GPIOPinWrite(GPIO_PORTB_BASE,darbe, darbe);
K=0;
}
if(yon1==1)
Sayac++;
Else
Sayac--
}
void IntGPIOB(void)
{
	if (GPIOPinIntStatus(GPIO_PORTB_BASE, basla) & basla)
	{
		GPIOPinIntClear(GPIO_PORTB_BASE, basla);
Bekle=6/1000;
TimerLoadSet(TIMER0_BASE, TIMER_A, SysCtlClockGet()*Bekle);
	   	TimerEnable(TIMER0_BASE, TIMERA); 
GPIOPinWrite(GPIO_PORTB_BASE, yon, 0);
yon1=0;	}
Else if(GPIOPinIntStatus(GPIO_PORTB_BASE, dur) & dur){
	    GPIOPinIntClear(GPIO_PORTB_BASE, dur);
          	TimerDisable(TIMER0_BASE, TIMERA); 
UARTprintf(«adým sayýsý=%d\n",Sayac );
Else if(GPIOPinIntStatus(GPIO_PORTB_BASE, ileri) & ileri){
	    GPIOPinIntClear(GPIO_PORTB_BASE, ileri);
GPIOPinWrite(GPIO_PORTB_BASE, yon, 0);
yon1=0;
}}}
Else if(GPIOPinIntStatus(GPIO_PORTB_BASE, geri) & geri){
GPIOPinIntClear(GPIO_PORTB_BASE, geri);
GPIOPinWrite(GPIO_PORTB_BASE, yon, yon);
yon1=1;
}
Else if(GPIOPinIntStatus(GPIO_PORTB_BASE, hizlan) & hizlan){
GPIOPinIntClear(GPIO_PORTB_BASE, hizlan);
Ýf(Bekle>6/10000){
Bekle=Bekle-6/10000;
TimerLoadSet(TIMER0_BASE, TIMER_A, SysCtlClockGet()*Bekle);}
}
Else if(GPIOPinIntStatus(GPIO_PORTB_BASE, yavas) & yavas){
GPIOPinIntClear(GPIO_PORTB_BASE, yavas);
Ýf(Bekle<300/1000){
Bekle=Bekle+6/10000;
TimerLoadSet(TIMER0_BASE, TIMER_A, SysCtlClockGet()*Bekle);}